{% extends 'base.html.twig' %}

{% block title %}Payment{% endblock %}

{% block body %}

<style>
body{
    background: darkblue;
    /* background-image: url('/assets/uploads/products/6fcf56946d753a0a73da5ed0842ea4e3.webp') ; */
    /* opacity:0.20; */
    background-size:cover;

}

.imgH {
    position: relative;
    overflow: hidden;
    /* padding: 16px; */
    /* border: 1px dashed green; */
}
.imgH h1 {
    /* padding: 100px; */
    position: relative;
    z-index: 2;
}
.imgH img {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: auto;
    opacity: 0.6;
}

footer{
    position: relative;
    z-index: 2;
}

section{
    position: relative;
    z-index: 2;
}


</style>


    <!-- Icons Grid -->
<div class="imgH">
    <img class="bgH d-block w-100" src="{{asset('/assets/uploads/products/6fcf56946d753a0a73da5ed0842ea4e3.webp')}}" >
    <main class="container nopadding p-5">
        <section class="row p-5">
            <div class="col-md p-5">
                <div class="card-body">
                {% for product in recapCart %}
                <h2 class="col-md pb-2 pt-md my-4 mt-lg-5 text-light">Récapitulatif de la commande<span class='fs-base fw-normal text-muted'>({{ product.quantity|length}}produits)</span></h2>
                    <div class="d-flex align-items-center justify-content-between border-top py-4 mb-4 text-light">
                    {% set subTotal = (product.products.price * product.quantity ) %}
                    {% set fulTotal = 0 %}
                    {% set fulTotal = fulTotal + subTotal %}
                    Total:<spam class='fs-3 fw-semibold text-light ms-2'> Quantité : x{{product.quantity}} {{ (fulTotal / 100)|number_format(2,',','.')}} €</spam>
                        <h3 class="h5 mb-2 text-light">{{product.products.name}}</h3>
                    </div>

                    <form action="{{ path("subscription_paiement", {id: product.products.id }) }}" method="post" class=" p-5" id="payment-form">
                        {% endfor %}
                        <div class="form-row ">
                            <p class="col-md pb-2 pt-md-2 my-4 mt-lg-5">Vous allez procéder à un payement securisé avec notre partenaire <i class="fab fa-stripe"></i></p>
                            <div id="card-elements"></div>
                                <script src="https://js.stripe.com/v3/"></script>
                            <div id="card-errors" role="alert"></div>
                        </div>
                        <button class="btn btn-primary mt-4">Payer</button>
                    </form>
                </div>
            </div>
            <div class="col-md-3">
                <div class="features-icons-item mx-auto mb-5 mb-lg-0 mb-lg-3">
                    {# <img src="{{ products.image }}" alt="..." class="img-thumbnail"> #}
                </div>
            </div>
        </section>
    </main>
</div>
{% endblock %}


{% block javascripts %}
<script>

    {% if app.environment == 'dev' %}
        var stripeToken = "{{stripe_public_key_test}}";
        
    {% else %}
        var stripeToken = "{{stripe_public_key_test}}";
    {% endif %}
    console.log(stripeToken+" test");

    var stripe = Stripe(stripeToken);
    var elements = stripe.elements();
    var subscription = "{{ products.id }}";
    var clientSecret = "{{ intentSecret }}";
    var cardholderName = "{{ app.user.lastname }}";
    var cardholderEmail = "{{ app.user.email }}";

    console.log('clientSecret',clientSecret);

    var styleCustom = {
    	base: {
    		fontSize: '16px',
            color: '#25332d'
        }
    }

    // Monter notre form a l'objet Stripe
    var card = elements.create('card', {style: styleCustom });
    card.mount("#card-elements");

    //Message Error
    card.addEventListener('change', function(event){
    	var displayError = document.getElementById('card-errors');

    	if(event.error) {
		    displayError.textContent = event.error.message;
        } else {
		    displayError.textContent = '';
        }
    });

    var form = document.getElementById('payment-form');

    form.addEventListener('submit', function(event) {
    	event.preventDefault();

	    stripe.handleCardPayment(
		    clientSecret,
		    card,
            {
            	payment_method_data: {
		            billing_details: {
		            	name: cardholderName,
                        email: cardholderEmail
                    }
                }
            }
        ).then((result) => {
        	if(result.error) {
        		// Display error
            } else if('paymentIntent' in result) {
        		console.log('Result : ',result);
        		stripeTokenHandler(result.paymentIntent);
		        console.log('Result paymentIntent : ',result.paymentIntent);
            }
        })
    });

    function stripeTokenHandler(intent) {
    	var form = document.getElementById('payment-form');
    	var InputIntentId = document.createElement('input');
    	var InputIntentPaymentMethod = document.createElement('input');
	    var InputIntentStatus = document.createElement('input');
	    var InputSubscription = document.createElement('input');

	    InputIntentId.setAttribute('type', 'hidden');
	    InputIntentId.setAttribute('name', 'stripeIntentId');
	    InputIntentId.setAttribute('value', intent.id);

	    InputIntentPaymentMethod.setAttribute('type', 'hidden');
	    InputIntentPaymentMethod.setAttribute('name', 'stripeIntentPaymentMethod');
	    InputIntentPaymentMethod.setAttribute('value', intent.payment_method);

	    InputIntentStatus.setAttribute('type', 'hidden');
	    InputIntentStatus.setAttribute('name', 'stripeIntentStatus');
	    InputIntentStatus.setAttribute('value', intent.status);

	    InputSubscription.setAttribute('type', 'hidden');
	    InputSubscription.setAttribute('name', 'subscription');
	    InputSubscription.setAttribute('value', subscription);

	    form.appendChild(InputIntentId);
	    form.appendChild(InputIntentPaymentMethod);
	    form.appendChild(InputIntentStatus);
	    form.appendChild(InputSubscription);
	    form.submit();
    }
</script>
{% endblock %}